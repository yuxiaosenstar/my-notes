(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{502:function(o,s,e){"use strict";e.r(s);var i=e(2),t=Object(i.a)({},(function(){var o=this,s=o._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[s("h3",{attrs:{id:"什么是-cookie"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-cookie"}},[o._v("#")]),o._v(" 什么是 Cookie")]),o._v(" "),s("p",[o._v("HTTP Cookie（也叫 Web Cookie 或浏览器 Cookie）是服务器发送到用户浏览器并保存在本地的一小块数据，它会在浏览器下次向同一服务器再发起请求时被携带并发送到服务器上。通常，它用于告知服务端两个请求是否来自同一浏览器，如保持用户的登录状态。Cookie 使基于无状态的 HTTP 协议记录稳定的状态信息成为了可能。")]),o._v(" "),s("p",[o._v("Cookie 主要用于以下三个方面：")]),o._v(" "),s("ul",[s("li",[o._v("会话状态管理（如用户登录状态、购物车、游戏分数或其它需要记录的信息）")]),o._v(" "),s("li",[o._v("个性化设置（如用户自定义设置、主题等）")]),o._v(" "),s("li",[o._v("浏览器行为跟踪（如跟踪分析用户行为等）")])]),o._v(" "),s("h3",{attrs:{id:"什么是-session"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是-session"}},[o._v("#")]),o._v(" 什么是 Session")]),o._v(" "),s("p",[o._v("Session 代表着服务器和客户端一次会话的过程。Session 对象存储特定用户会话所需的属性及配置信息。这样，当用户在应用程序的 Web 页之间跳转时，存储在 Session 对象中的变量将不会丢失，而是在整个用户会话中一直存在下去。当客户端关闭会话，或者 Session 超时失效时会话结束。")]),o._v(" "),s("h3",{attrs:{id:"cookie-和-session-有什么不同"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cookie-和-session-有什么不同"}},[o._v("#")]),o._v(" Cookie 和 Session 有什么不同？")]),o._v(" "),s("ul",[s("li",[o._v("作用范围不同，Cookie 保存在客户端（浏览器），Session 保存在服务器端。")]),o._v(" "),s("li",[o._v("存取方式的不同，Cookie 只能保存 ASCII，Session 可以存任意数据类型，一般情况下我们可以在 Session 中保持一些常用变量信息，比如说 UserId 等。")]),o._v(" "),s("li",[o._v("有效期不同，Cookie 可设置为长时间保持，比如我们经常使用的默认登录功能，Session 一般失效时间较短，客户端关闭或者 Session 超时都会失效。")]),o._v(" "),s("li",[o._v("隐私策略不同，Cookie 存储在客户端，比较容易遭到不法获取，早期有人将用户的登录名和密码存储在 Cookie 中导致信息被窃取；Session 存储在服务端，安全性相对 Cookie 要好一些。")]),o._v(" "),s("li",[o._v("存储大小不同， 单个 Cookie 保存的数据不能超过 4K，Session 可存储数据远高于 Cookie。")])])])}),[],!1,null,null,null);s.default=t.exports}}]);